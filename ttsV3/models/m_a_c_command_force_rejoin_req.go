// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MACCommandForceRejoinReq m a c command force rejoin req
//
// swagger:model MACCommandForceRejoinReq
type MACCommandForceRejoinReq struct {

	// data rate index
	DataRateIndex V3DataRateIndex `json:"data_rate_index,omitempty"`

	// max retries
	MaxRetries int64 `json:"max_retries,omitempty"`

	// Exponent e that configures the rejoin period = 32 * 2^e + rand(0,32) seconds.
	PeriodExponent V3RejoinPeriodExponent `json:"period_exponent,omitempty"`

	// rejoin type
	RejoinType V3RejoinType `json:"rejoin_type,omitempty"`
}

// Validate validates this m a c command force rejoin req
func (m *MACCommandForceRejoinReq) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDataRateIndex(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePeriodExponent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRejoinType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MACCommandForceRejoinReq) validateDataRateIndex(formats strfmt.Registry) error {

	if swag.IsZero(m.DataRateIndex) { // not required
		return nil
	}

	if err := m.DataRateIndex.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("data_rate_index")
		}
		return err
	}

	return nil
}

func (m *MACCommandForceRejoinReq) validatePeriodExponent(formats strfmt.Registry) error {

	if swag.IsZero(m.PeriodExponent) { // not required
		return nil
	}

	if err := m.PeriodExponent.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("period_exponent")
		}
		return err
	}

	return nil
}

func (m *MACCommandForceRejoinReq) validateRejoinType(formats strfmt.Registry) error {

	if swag.IsZero(m.RejoinType) { // not required
		return nil
	}

	if err := m.RejoinType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("rejoin_type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MACCommandForceRejoinReq) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MACCommandForceRejoinReq) UnmarshalBinary(b []byte) error {
	var res MACCommandForceRejoinReq
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
