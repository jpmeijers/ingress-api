// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3ContactType v3 contact type
//
// swagger:model v3ContactType
type V3ContactType string

const (

	// V3ContactTypeCONTACTTYPEOTHER captures enum value "CONTACT_TYPE_OTHER"
	V3ContactTypeCONTACTTYPEOTHER V3ContactType = "CONTACT_TYPE_OTHER"

	// V3ContactTypeCONTACTTYPEABUSE captures enum value "CONTACT_TYPE_ABUSE"
	V3ContactTypeCONTACTTYPEABUSE V3ContactType = "CONTACT_TYPE_ABUSE"

	// V3ContactTypeCONTACTTYPEBILLING captures enum value "CONTACT_TYPE_BILLING"
	V3ContactTypeCONTACTTYPEBILLING V3ContactType = "CONTACT_TYPE_BILLING"

	// V3ContactTypeCONTACTTYPETECHNICAL captures enum value "CONTACT_TYPE_TECHNICAL"
	V3ContactTypeCONTACTTYPETECHNICAL V3ContactType = "CONTACT_TYPE_TECHNICAL"
)

// for schema
var v3ContactTypeEnum []interface{}

func init() {
	var res []V3ContactType
	if err := json.Unmarshal([]byte(`["CONTACT_TYPE_OTHER","CONTACT_TYPE_ABUSE","CONTACT_TYPE_BILLING","CONTACT_TYPE_TECHNICAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3ContactTypeEnum = append(v3ContactTypeEnum, v)
	}
}

func (m V3ContactType) validateV3ContactTypeEnum(path, location string, value V3ContactType) error {
	if err := validate.Enum(path, location, value, v3ContactTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 contact type
func (m V3ContactType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3ContactTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
