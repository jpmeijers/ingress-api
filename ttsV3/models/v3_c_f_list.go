// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V3CFList v3 c f list
//
// swagger:model v3CFList
type V3CFList struct {

	// ChMasks controlling the channels to be used.
	// Length of this field must be equal to the amount of uplink channels
	// defined by the selected frequency plan.
	ChMasks []bool `json:"ch_masks"`

	// Frequencies to be broadcasted, in hecto-Hz.
	// These values are broadcasted as 24 bits unsigned integers.
	// This field should not contain default values.
	Freq []int64 `json:"freq"`

	// type
	Type V3CFListType `json:"type,omitempty"`
}

// Validate validates this v3 c f list
func (m *V3CFList) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3CFList) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	if err := m.Type.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("type")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3CFList) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3CFList) UnmarshalBinary(b []byte) error {
	var res V3CFList
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
