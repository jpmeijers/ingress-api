// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3Class v3 class
//
// swagger:model v3Class
type V3Class string

const (

	// V3ClassCLASSA captures enum value "CLASS_A"
	V3ClassCLASSA V3Class = "CLASS_A"

	// V3ClassCLASSB captures enum value "CLASS_B"
	V3ClassCLASSB V3Class = "CLASS_B"

	// V3ClassCLASSC captures enum value "CLASS_C"
	V3ClassCLASSC V3Class = "CLASS_C"
)

// for schema
var v3ClassEnum []interface{}

func init() {
	var res []V3Class
	if err := json.Unmarshal([]byte(`["CLASS_A","CLASS_B","CLASS_C"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3ClassEnum = append(v3ClassEnum, v)
	}
}

func (m V3Class) validateV3ClassEnum(path, location string, value V3Class) error {
	if err := validate.Enum(path, location, value, v3ClassEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 class
func (m V3Class) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3ClassEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
