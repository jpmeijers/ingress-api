// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3DownlinkPathConstraint  - DOWNLINK_PATH_CONSTRAINT_NONE: Indicates that the gateway can be selected for downlink without constraints by the Network Server.
//  - DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER: Indicates that the gateway can be selected for downlink only if no other or better gateway can be selected.
//  - DOWNLINK_PATH_CONSTRAINT_NEVER: Indicates that this gateway will never be selected for downlink, even if that results in no available downlink path.
//
// swagger:model v3DownlinkPathConstraint
type V3DownlinkPathConstraint string

const (

	// V3DownlinkPathConstraintDOWNLINKPATHCONSTRAINTNONE captures enum value "DOWNLINK_PATH_CONSTRAINT_NONE"
	V3DownlinkPathConstraintDOWNLINKPATHCONSTRAINTNONE V3DownlinkPathConstraint = "DOWNLINK_PATH_CONSTRAINT_NONE"

	// V3DownlinkPathConstraintDOWNLINKPATHCONSTRAINTPREFEROTHER captures enum value "DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER"
	V3DownlinkPathConstraintDOWNLINKPATHCONSTRAINTPREFEROTHER V3DownlinkPathConstraint = "DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER"

	// V3DownlinkPathConstraintDOWNLINKPATHCONSTRAINTNEVER captures enum value "DOWNLINK_PATH_CONSTRAINT_NEVER"
	V3DownlinkPathConstraintDOWNLINKPATHCONSTRAINTNEVER V3DownlinkPathConstraint = "DOWNLINK_PATH_CONSTRAINT_NEVER"
)

// for schema
var v3DownlinkPathConstraintEnum []interface{}

func init() {
	var res []V3DownlinkPathConstraint
	if err := json.Unmarshal([]byte(`["DOWNLINK_PATH_CONSTRAINT_NONE","DOWNLINK_PATH_CONSTRAINT_PREFER_OTHER","DOWNLINK_PATH_CONSTRAINT_NEVER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3DownlinkPathConstraintEnum = append(v3DownlinkPathConstraintEnum, v)
	}
}

func (m V3DownlinkPathConstraint) validateV3DownlinkPathConstraintEnum(path, location string, value V3DownlinkPathConstraint) error {
	if err := validate.Enum(path, location, value, v3DownlinkPathConstraintEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 downlink path constraint
func (m V3DownlinkPathConstraint) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3DownlinkPathConstraintEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
