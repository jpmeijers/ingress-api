// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3TxSchedulePriority v3 tx schedule priority
//
// swagger:model v3TxSchedulePriority
type V3TxSchedulePriority string

const (

	// V3TxSchedulePriorityLOWEST captures enum value "LOWEST"
	V3TxSchedulePriorityLOWEST V3TxSchedulePriority = "LOWEST"

	// V3TxSchedulePriorityLOW captures enum value "LOW"
	V3TxSchedulePriorityLOW V3TxSchedulePriority = "LOW"

	// V3TxSchedulePriorityBELOWNORMAL captures enum value "BELOW_NORMAL"
	V3TxSchedulePriorityBELOWNORMAL V3TxSchedulePriority = "BELOW_NORMAL"

	// V3TxSchedulePriorityNORMAL captures enum value "NORMAL"
	V3TxSchedulePriorityNORMAL V3TxSchedulePriority = "NORMAL"

	// V3TxSchedulePriorityABOVENORMAL captures enum value "ABOVE_NORMAL"
	V3TxSchedulePriorityABOVENORMAL V3TxSchedulePriority = "ABOVE_NORMAL"

	// V3TxSchedulePriorityHIGH captures enum value "HIGH"
	V3TxSchedulePriorityHIGH V3TxSchedulePriority = "HIGH"

	// V3TxSchedulePriorityHIGHEST captures enum value "HIGHEST"
	V3TxSchedulePriorityHIGHEST V3TxSchedulePriority = "HIGHEST"
)

// for schema
var v3TxSchedulePriorityEnum []interface{}

func init() {
	var res []V3TxSchedulePriority
	if err := json.Unmarshal([]byte(`["LOWEST","LOW","BELOW_NORMAL","NORMAL","ABOVE_NORMAL","HIGH","HIGHEST"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3TxSchedulePriorityEnum = append(v3TxSchedulePriorityEnum, v)
	}
}

func (m V3TxSchedulePriority) validateV3TxSchedulePriorityEnum(path, location string, value V3TxSchedulePriority) error {
	if err := validate.Enum(path, location, value, v3TxSchedulePriorityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 tx schedule priority
func (m V3TxSchedulePriority) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3TxSchedulePriorityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
