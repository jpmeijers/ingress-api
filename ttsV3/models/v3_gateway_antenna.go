// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V3GatewayAntenna GatewayAntenna is the message that defines a gateway antenna.
//
// swagger:model v3GatewayAntenna
type V3GatewayAntenna struct {

	// attributes
	Attributes map[string]string `json:"attributes,omitempty"`

	// gain is the antenna gain relative to this gateway, in dBi.
	Gain float32 `json:"gain,omitempty"`

	// location is the antenna's location.
	Location *Lorawanv3Location `json:"location,omitempty"`
}

// Validate validates this v3 gateway antenna
func (m *V3GatewayAntenna) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLocation(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3GatewayAntenna) validateLocation(formats strfmt.Registry) error {

	if swag.IsZero(m.Location) { // not required
		return nil
	}

	if m.Location != nil {
		if err := m.Location.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("location")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3GatewayAntenna) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3GatewayAntenna) UnmarshalBinary(b []byte) error {
	var res V3GatewayAntenna
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
