// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3DeviceEIRP v3 device e i r p
//
// swagger:model v3DeviceEIRP
type V3DeviceEIRP string

const (

	// V3DeviceEIRPDEVICEEIRP8 captures enum value "DEVICE_EIRP_8"
	V3DeviceEIRPDEVICEEIRP8 V3DeviceEIRP = "DEVICE_EIRP_8"

	// V3DeviceEIRPDEVICEEIRP10 captures enum value "DEVICE_EIRP_10"
	V3DeviceEIRPDEVICEEIRP10 V3DeviceEIRP = "DEVICE_EIRP_10"

	// V3DeviceEIRPDEVICEEIRP12 captures enum value "DEVICE_EIRP_12"
	V3DeviceEIRPDEVICEEIRP12 V3DeviceEIRP = "DEVICE_EIRP_12"

	// V3DeviceEIRPDEVICEEIRP13 captures enum value "DEVICE_EIRP_13"
	V3DeviceEIRPDEVICEEIRP13 V3DeviceEIRP = "DEVICE_EIRP_13"

	// V3DeviceEIRPDEVICEEIRP14 captures enum value "DEVICE_EIRP_14"
	V3DeviceEIRPDEVICEEIRP14 V3DeviceEIRP = "DEVICE_EIRP_14"

	// V3DeviceEIRPDEVICEEIRP16 captures enum value "DEVICE_EIRP_16"
	V3DeviceEIRPDEVICEEIRP16 V3DeviceEIRP = "DEVICE_EIRP_16"

	// V3DeviceEIRPDEVICEEIRP18 captures enum value "DEVICE_EIRP_18"
	V3DeviceEIRPDEVICEEIRP18 V3DeviceEIRP = "DEVICE_EIRP_18"

	// V3DeviceEIRPDEVICEEIRP20 captures enum value "DEVICE_EIRP_20"
	V3DeviceEIRPDEVICEEIRP20 V3DeviceEIRP = "DEVICE_EIRP_20"

	// V3DeviceEIRPDEVICEEIRP21 captures enum value "DEVICE_EIRP_21"
	V3DeviceEIRPDEVICEEIRP21 V3DeviceEIRP = "DEVICE_EIRP_21"

	// V3DeviceEIRPDEVICEEIRP24 captures enum value "DEVICE_EIRP_24"
	V3DeviceEIRPDEVICEEIRP24 V3DeviceEIRP = "DEVICE_EIRP_24"

	// V3DeviceEIRPDEVICEEIRP26 captures enum value "DEVICE_EIRP_26"
	V3DeviceEIRPDEVICEEIRP26 V3DeviceEIRP = "DEVICE_EIRP_26"

	// V3DeviceEIRPDEVICEEIRP27 captures enum value "DEVICE_EIRP_27"
	V3DeviceEIRPDEVICEEIRP27 V3DeviceEIRP = "DEVICE_EIRP_27"

	// V3DeviceEIRPDEVICEEIRP29 captures enum value "DEVICE_EIRP_29"
	V3DeviceEIRPDEVICEEIRP29 V3DeviceEIRP = "DEVICE_EIRP_29"

	// V3DeviceEIRPDEVICEEIRP30 captures enum value "DEVICE_EIRP_30"
	V3DeviceEIRPDEVICEEIRP30 V3DeviceEIRP = "DEVICE_EIRP_30"

	// V3DeviceEIRPDEVICEEIRP33 captures enum value "DEVICE_EIRP_33"
	V3DeviceEIRPDEVICEEIRP33 V3DeviceEIRP = "DEVICE_EIRP_33"

	// V3DeviceEIRPDEVICEEIRP36 captures enum value "DEVICE_EIRP_36"
	V3DeviceEIRPDEVICEEIRP36 V3DeviceEIRP = "DEVICE_EIRP_36"
)

// for schema
var v3DeviceEIRPEnum []interface{}

func init() {
	var res []V3DeviceEIRP
	if err := json.Unmarshal([]byte(`["DEVICE_EIRP_8","DEVICE_EIRP_10","DEVICE_EIRP_12","DEVICE_EIRP_13","DEVICE_EIRP_14","DEVICE_EIRP_16","DEVICE_EIRP_18","DEVICE_EIRP_20","DEVICE_EIRP_21","DEVICE_EIRP_24","DEVICE_EIRP_26","DEVICE_EIRP_27","DEVICE_EIRP_29","DEVICE_EIRP_30","DEVICE_EIRP_33","DEVICE_EIRP_36"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3DeviceEIRPEnum = append(v3DeviceEIRPEnum, v)
	}
}

func (m V3DeviceEIRP) validateV3DeviceEIRPEnum(path, location string, value V3DeviceEIRP) error {
	if err := validate.Enum(path, location, value, v3DeviceEIRPEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 device e i r p
func (m V3DeviceEIRP) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3DeviceEIRPEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
