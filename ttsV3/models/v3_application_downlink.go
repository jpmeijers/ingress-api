// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V3ApplicationDownlink v3 application downlink
//
// swagger:model v3ApplicationDownlink
type V3ApplicationDownlink struct {

	// Optional gateway and timing information for class B and C.
	// If set, this downlink message will only be transmitted as class B or C downlink.
	// If not set, this downlink message may be transmitted in class A, B and C.
	Classbc *ApplicationDownlinkClassBC `json:"class_b_c,omitempty"`

	// confirmed
	Confirmed bool `json:"confirmed,omitempty"`

	// correlation ids
	CorrelationIds []string `json:"correlation_ids"`

	// decoded payload
	DecodedPayload interface{} `json:"decoded_payload,omitempty"`

	// f cnt
	FCnt int64 `json:"f_cnt,omitempty"`

	// f port
	FPort int64 `json:"f_port,omitempty"`

	// The frame payload of the downlink message.
	// The payload is encrypted if the skip_payload_crypto field of the EndDevice
	// is true.
	// Format: byte
	FrmPayload strfmt.Base64 `json:"frm_payload,omitempty"`

	// Priority for scheduling the downlink message.
	Priority V3TxSchedulePriority `json:"priority,omitempty"`

	// Join Server issued identifier for the session keys used by this downlink.
	// Format: byte
	SessionKeyID strfmt.Base64 `json:"session_key_id,omitempty"`
}

// Validate validates this v3 application downlink
func (m *V3ApplicationDownlink) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClassbc(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePriority(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3ApplicationDownlink) validateClassbc(formats strfmt.Registry) error {

	if swag.IsZero(m.Classbc) { // not required
		return nil
	}

	if m.Classbc != nil {
		if err := m.Classbc.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("class_b_c")
			}
			return err
		}
	}

	return nil
}

func (m *V3ApplicationDownlink) validatePriority(formats strfmt.Registry) error {

	if swag.IsZero(m.Priority) { // not required
		return nil
	}

	if err := m.Priority.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("priority")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3ApplicationDownlink) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3ApplicationDownlink) UnmarshalBinary(b []byte) error {
	var res V3ApplicationDownlink
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
