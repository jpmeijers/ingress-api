// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MACCommandRejoinParamSetupReq m a c command rejoin param setup req
//
// swagger:model MACCommandRejoinParamSetupReq
type MACCommandRejoinParamSetupReq struct {

	// Exponent e that configures the rejoin counter = 2^(e+4) messages.
	MaxCountExponent V3RejoinCountExponent `json:"max_count_exponent,omitempty"`

	// Exponent e that configures the rejoin timer = 2^(e+10) seconds.
	MaxTimeExponent V3RejoinTimeExponent `json:"max_time_exponent,omitempty"`
}

// Validate validates this m a c command rejoin param setup req
func (m *MACCommandRejoinParamSetupReq) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMaxCountExponent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaxTimeExponent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MACCommandRejoinParamSetupReq) validateMaxCountExponent(formats strfmt.Registry) error {

	if swag.IsZero(m.MaxCountExponent) { // not required
		return nil
	}

	if err := m.MaxCountExponent.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("max_count_exponent")
		}
		return err
	}

	return nil
}

func (m *MACCommandRejoinParamSetupReq) validateMaxTimeExponent(formats strfmt.Registry) error {

	if swag.IsZero(m.MaxTimeExponent) { // not required
		return nil
	}

	if err := m.MaxTimeExponent.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("max_time_exponent")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MACCommandRejoinParamSetupReq) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MACCommandRejoinParamSetupReq) UnmarshalBinary(b []byte) error {
	var res MACCommandRejoinParamSetupReq
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
