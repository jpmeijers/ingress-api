// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V3MACPayload v3 m a c payload
//
// swagger:model v3MACPayload
type V3MACPayload struct {

	// decoded payload
	DecodedPayload interface{} `json:"decoded_payload,omitempty"`

	// f hdr
	FHdr *V3FHDR `json:"f_hdr,omitempty"`

	// f port
	FPort int64 `json:"f_port,omitempty"`

	// frm payload
	// Format: byte
	FrmPayload strfmt.Base64 `json:"frm_payload,omitempty"`
}

// Validate validates this v3 m a c payload
func (m *V3MACPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFHdr(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3MACPayload) validateFHdr(formats strfmt.Registry) error {

	if swag.IsZero(m.FHdr) { // not required
		return nil
	}

	if m.FHdr != nil {
		if err := m.FHdr.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("f_hdr")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3MACPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3MACPayload) UnmarshalBinary(b []byte) error {
	var res V3MACPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
