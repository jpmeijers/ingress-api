// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3RejoinType v3 rejoin type
//
// swagger:model v3RejoinType
type V3RejoinType string

const (

	// V3RejoinTypeCONTEXT captures enum value "CONTEXT"
	V3RejoinTypeCONTEXT V3RejoinType = "CONTEXT"

	// V3RejoinTypeSESSION captures enum value "SESSION"
	V3RejoinTypeSESSION V3RejoinType = "SESSION"

	// V3RejoinTypeKEYS captures enum value "KEYS"
	V3RejoinTypeKEYS V3RejoinType = "KEYS"
)

// for schema
var v3RejoinTypeEnum []interface{}

func init() {
	var res []V3RejoinType
	if err := json.Unmarshal([]byte(`["CONTEXT","SESSION","KEYS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3RejoinTypeEnum = append(v3RejoinTypeEnum, v)
	}
}

func (m V3RejoinType) validateV3RejoinTypeEnum(path, location string, value V3RejoinType) error {
	if err := validate.Enum(path, location, value, v3RejoinTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 rejoin type
func (m V3RejoinType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3RejoinTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
