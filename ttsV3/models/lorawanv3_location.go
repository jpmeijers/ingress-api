// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Lorawanv3Location lorawanv3 location
//
// swagger:model lorawanv3Location
type Lorawanv3Location struct {

	// The accuracy of the location (meters).
	Accuracy int32 `json:"accuracy,omitempty"`

	// The altitude (meters), where 0 is the mean sea level.
	Altitude int32 `json:"altitude,omitempty"`

	// The Northâ€“South position (degrees; -90 to +90), where 0 is the equator, North pole is positive, South pole is negative.
	Latitude float64 `json:"latitude,omitempty"`

	// The East-West position (degrees; -180 to +180), where 0 is the Prime Meridian (Greenwich), East is positive , West is negative.
	Longitude float64 `json:"longitude,omitempty"`

	// Source of the location information.
	Source V3LocationSource `json:"source,omitempty"`
}

// Validate validates this lorawanv3 location
func (m *Lorawanv3Location) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Lorawanv3Location) validateSource(formats strfmt.Registry) error {

	if swag.IsZero(m.Source) { // not required
		return nil
	}

	if err := m.Source.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("source")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Lorawanv3Location) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Lorawanv3Location) UnmarshalBinary(b []byte) error {
	var res Lorawanv3Location
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
