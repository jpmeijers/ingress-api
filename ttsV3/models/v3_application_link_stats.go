// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V3ApplicationLinkStats Link stats as monitored by the Application Server.
//
// swagger:model v3ApplicationLinkStats
type V3ApplicationLinkStats struct {

	// Number of downlink messages forwarded.
	DownlinkCount string `json:"downlink_count,omitempty"`

	// Timestamp when the last downlink message has been forwarded to a Network Server.
	// Format: date-time
	LastDownlinkForwardedAt strfmt.DateTime `json:"last_downlink_forwarded_at,omitempty"`

	// Timestamp when the last upstream message has been received from a Network Server.
	// This can be a join-accept, uplink message or downlink message event.
	// Format: date-time
	LastUpReceivedAt strfmt.DateTime `json:"last_up_received_at,omitempty"`

	// linked at
	// Format: date-time
	LinkedAt strfmt.DateTime `json:"linked_at,omitempty"`

	// network server address
	NetworkServerAddress string `json:"network_server_address,omitempty"`

	// Number of upstream messages received.
	UpCount string `json:"up_count,omitempty"`
}

// Validate validates this v3 application link stats
func (m *V3ApplicationLinkStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastDownlinkForwardedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastUpReceivedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLinkedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3ApplicationLinkStats) validateLastDownlinkForwardedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.LastDownlinkForwardedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("last_downlink_forwarded_at", "body", "date-time", m.LastDownlinkForwardedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *V3ApplicationLinkStats) validateLastUpReceivedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.LastUpReceivedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("last_up_received_at", "body", "date-time", m.LastUpReceivedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *V3ApplicationLinkStats) validateLinkedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.LinkedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("linked_at", "body", "date-time", m.LinkedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3ApplicationLinkStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3ApplicationLinkStats) UnmarshalBinary(b []byte) error {
	var res V3ApplicationLinkStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
