// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V3ContactInfo v3 contact info
//
// swagger:model v3ContactInfo
type V3ContactInfo struct {

	// contact method
	ContactMethod V3ContactMethod `json:"contact_method,omitempty"`

	// contact type
	ContactType V3ContactType `json:"contact_type,omitempty"`

	// public
	Public bool `json:"public,omitempty"`

	// validated at
	// Format: date-time
	ValidatedAt strfmt.DateTime `json:"validated_at,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this v3 contact info
func (m *V3ContactInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContactMethod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateContactType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V3ContactInfo) validateContactMethod(formats strfmt.Registry) error {

	if swag.IsZero(m.ContactMethod) { // not required
		return nil
	}

	if err := m.ContactMethod.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("contact_method")
		}
		return err
	}

	return nil
}

func (m *V3ContactInfo) validateContactType(formats strfmt.Registry) error {

	if swag.IsZero(m.ContactType) { // not required
		return nil
	}

	if err := m.ContactType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("contact_type")
		}
		return err
	}

	return nil
}

func (m *V3ContactInfo) validateValidatedAt(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("validated_at", "body", "date-time", m.ValidatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V3ContactInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V3ContactInfo) UnmarshalBinary(b []byte) error {
	var res V3ContactInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
