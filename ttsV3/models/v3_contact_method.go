// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V3ContactMethod v3 contact method
//
// swagger:model v3ContactMethod
type V3ContactMethod string

const (

	// V3ContactMethodCONTACTMETHODOTHER captures enum value "CONTACT_METHOD_OTHER"
	V3ContactMethodCONTACTMETHODOTHER V3ContactMethod = "CONTACT_METHOD_OTHER"

	// V3ContactMethodCONTACTMETHODEMAIL captures enum value "CONTACT_METHOD_EMAIL"
	V3ContactMethodCONTACTMETHODEMAIL V3ContactMethod = "CONTACT_METHOD_EMAIL"

	// V3ContactMethodCONTACTMETHODPHONE captures enum value "CONTACT_METHOD_PHONE"
	V3ContactMethodCONTACTMETHODPHONE V3ContactMethod = "CONTACT_METHOD_PHONE"
)

// for schema
var v3ContactMethodEnum []interface{}

func init() {
	var res []V3ContactMethod
	if err := json.Unmarshal([]byte(`["CONTACT_METHOD_OTHER","CONTACT_METHOD_EMAIL","CONTACT_METHOD_PHONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v3ContactMethodEnum = append(v3ContactMethodEnum, v)
	}
}

func (m V3ContactMethod) validateV3ContactMethodEnum(path, location string, value V3ContactMethod) error {
	if err := validate.Enum(path, location, value, v3ContactMethodEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this v3 contact method
func (m V3ContactMethod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV3ContactMethodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
